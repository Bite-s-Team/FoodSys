// <auto-generated />
using System;
using FoodSys.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodSys.Infra.Data.Migrations
{
    [DbContext(typeof(FoodSysDbContext))]
    partial class FoodSysDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodSys.Domain.Entity.Address", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("a_id");

                    b.Property<int>("AddressNumber")
                        .HasColumnType("int")
                        .HasColumnName("a_address_number");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("a_cep");

                    b.Property<string>("Complement")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("a_complement");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("a_costumer_id");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("a_receiver_name");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("a_street");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("ADDRESS");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Company", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cy_id");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("cy_cnpj");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("cy_description");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cy_email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cy_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("cy_password");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cy_plan_id");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cy_type_id");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("TypeId");

                    b.ToTable("COMPANY");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.CompanyPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cp_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cp_name");

                    b.HasKey("Id");

                    b.ToTable("COMPANY_PLAN");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e38b9226-a769-4fc6-a2ed-b0b61c5abdfa"),
                            Name = "Basic"
                        },
                        new
                        {
                            Id = new Guid("85639db2-623e-4575-8645-119fc965e2cf"),
                            Name = "Master"
                        });
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.CompanyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ctp_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ctp_name");

                    b.HasKey("Id");

                    b.ToTable("COMPANY_TYPE");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e5af852-44f5-4818-b5f3-1f9e35f3f445"),
                            Name = "Market"
                        },
                        new
                        {
                            Id = new Guid("efbc14c9-0f9f-4b78-86ba-43b5d841edd8"),
                            Name = "Restaurant"
                        });
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Coupon", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("c_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("c_code");

                    b.Property<Guid>("CompanyTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("c_company_type_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("c_description");

                    b.Property<Guid?>("MenuID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("c_menu_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("c_name");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("c_plan_id");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("c_value");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("c_value_type_id");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId")
                        .IsUnique();

                    b.HasIndex("MenuID");

                    b.HasIndex("PlanId");

                    b.HasIndex("ValueTypeId");

                    b.ToTable("COUPON");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.CouponCompanyRel", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cc_id");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cc_company_id");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cc_coupon_id");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.HasIndex("CouponId");

                    b.ToTable("COUPON_COMPANY");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.CouponCustomerRel", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cct_id");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cct_coupon_id");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cct_costumer_id");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("COUPON_COSTUMER");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.CouponValueType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cvt_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cvt_name");

                    b.HasKey("Id");

                    b.ToTable("COUPON_VALUE_TYPE");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b850a6c-0545-4280-8e4d-b9e5a946d5c4"),
                            Name = "Percetage"
                        },
                        new
                        {
                            Id = new Guid("9b3e0b6d-0352-4779-8ce9-31f333fb5758"),
                            Name = "Value"
                        });
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Customer", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ct_id");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2")
                        .HasColumnName("ct_birthday");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("ct_cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ct_email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ct_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("ct_password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("ct_phonenumber");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ct_plan_id");

                    b.HasKey("Id");

                    b.HasIndex("PlanId")
                        .IsUnique();

                    b.ToTable("CUSTOMER");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.CustomerPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("p_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("p_name");

                    b.HasKey("Id");

                    b.ToTable("CUSTOMER_PLAN");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5370ac23-9ef6-420e-b6fc-c9d27304306d"),
                            Name = "None"
                        },
                        new
                        {
                            Id = new Guid("6c68ab71-b8cd-4df5-bbf4-51bac0573974"),
                            Name = "Premium"
                        });
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Deliverer", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("d_id");

                    b.Property<int>("AddressNumber")
                        .HasMaxLength(8)
                        .HasColumnType("int")
                        .HasColumnName("d_addressnumber");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_birthday");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("d_cep");

                    b.Property<string>("CNH")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("d_cnh");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("d_cpf");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("d_complement");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("d_email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("d_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("d_password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("d_phonenumber");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("d_status_id");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("d_street");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("d_vehicle_id");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("VehicleId");

                    b.ToTable("DELIVERER");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.DelivererMotorcicle", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("dm_id");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("dm_brand");

                    b.Property<Guid>("DelivererId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("dm_deliverer_id");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("dm_model");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("dm_plate");

                    b.Property<string>("Renavam")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("dm_renavam");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("dm_year");

                    b.HasKey("Id");

                    b.HasIndex("DelivererId")
                        .IsUnique();

                    b.ToTable("DELIVERER_MOTORCICLE");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.DelivererStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ds_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ds_name");

                    b.HasKey("Id");

                    b.ToTable("DELIVERER_STATUS");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1ed9d5e-5b28-4766-9063-7dd75dfe9dc5"),
                            Name = "Offline"
                        },
                        new
                        {
                            Id = new Guid("50fc596c-4760-4ba0-aa58-c55058fb93a3"),
                            Name = "Online"
                        },
                        new
                        {
                            Id = new Guid("457c7de7-bb4a-490a-a3b9-2909bcb39b13"),
                            Name = "Work"
                        });
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.DelivererVehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("dv_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("dv_name");

                    b.HasKey("Id");

                    b.ToTable("DELIVERER_VEHICLE");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52ddaa85-ef1b-49b8-892a-80f64aefcbf6"),
                            Name = "Bike"
                        },
                        new
                        {
                            Id = new Guid("9a3e7663-0638-4a97-85c5-c39ea7417714"),
                            Name = "Motorcicle"
                        });
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Item", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("oi_id");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("oi_amount");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("oi_menu_id");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("oi_order_id");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("oi_value");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("OrderId");

                    b.ToTable("ORDER_ITEM");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Menu", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("m_id");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("m_categories");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("m_company_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("m_description");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("m_discount");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("m_image");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("m_is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("m_name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("m_price");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("MENU");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Order", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("o_id");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("o_address_id");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("o_company_id");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("o_coupon_id");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("o_costumer_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("o_date");

                    b.Property<Guid>("DelivererId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("o_deliverer_id");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("o_status_id");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("o_value");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CouponId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DelivererId");

                    b.HasIndex("StatusId");

                    b.ToTable("ORDER");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("os_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("os_name");

                    b.HasKey("Id");

                    b.ToTable("ORDER_STATUS");

                    b.HasData(
                        new
                        {
                            Id = new Guid("62c55696-5457-4856-a491-c70298b0b12c"),
                            Name = "Open"
                        },
                        new
                        {
                            Id = new Guid("5b3b9e5c-1a67-42f9-ac3f-726d970ec605"),
                            Name = "Closed"
                        },
                        new
                        {
                            Id = new Guid("088abd95-e418-41a3-bb7a-4d7833d59bdd"),
                            Name = "Canceled"
                        });
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Address", b =>
                {
                    b.HasOne("FoodSys.Domain.Entity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Company", b =>
                {
                    b.HasOne("FoodSys.Domain.Entity.CompanyPlan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.CompanyType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Coupon", b =>
                {
                    b.HasOne("FoodSys.Domain.Entity.CompanyType", "CompanyType")
                        .WithOne()
                        .HasForeignKey("FoodSys.Domain.Entity.Coupon", "CompanyTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.CustomerPlan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.CouponValueType", "ValueType")
                        .WithMany()
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyType");

                    b.Navigation("Menu");

                    b.Navigation("Plan");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.CouponCompanyRel", b =>
                {
                    b.HasOne("FoodSys.Domain.Entity.Company", "Company")
                        .WithOne()
                        .HasForeignKey("FoodSys.Domain.Entity.CouponCompanyRel", "CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.Coupon", "Coupon")
                        .WithMany("CompanyRel")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Coupon");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.CouponCustomerRel", b =>
                {
                    b.HasOne("FoodSys.Domain.Entity.Coupon", "Coupon")
                        .WithMany("CustomerRel")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.Customer", "User")
                        .WithOne()
                        .HasForeignKey("FoodSys.Domain.Entity.CouponCustomerRel", "CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Customer", b =>
                {
                    b.HasOne("FoodSys.Domain.Entity.CustomerPlan", "Plan")
                        .WithOne()
                        .HasForeignKey("FoodSys.Domain.Entity.Customer", "PlanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Deliverer", b =>
                {
                    b.HasOne("FoodSys.Domain.Entity.DelivererStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.DelivererVehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.DelivererMotorcicle", b =>
                {
                    b.HasOne("FoodSys.Domain.Entity.Deliverer", "Deliverer")
                        .WithOne()
                        .HasForeignKey("FoodSys.Domain.Entity.DelivererMotorcicle", "DelivererId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Deliverer");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Item", b =>
                {
                    b.HasOne("FoodSys.Domain.Entity.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.Order", "Order")
                        .WithMany("Itens")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Menu", b =>
                {
                    b.HasOne("FoodSys.Domain.Entity.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Order", b =>
                {
                    b.HasOne("FoodSys.Domain.Entity.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.Coupon", "Coupon")
                        .WithMany()
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.Deliverer", "Deliverer")
                        .WithMany()
                        .HasForeignKey("DelivererId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodSys.Domain.Entity.OrderStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Company");

                    b.Navigation("Coupon");

                    b.Navigation("Customer");

                    b.Navigation("Deliverer");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Coupon", b =>
                {
                    b.Navigation("CompanyRel");

                    b.Navigation("CustomerRel");
                });

            modelBuilder.Entity("FoodSys.Domain.Entity.Order", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
